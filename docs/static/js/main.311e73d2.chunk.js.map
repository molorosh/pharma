{"version":3,"sources":["logo.svg","db.js","DrugSchedule.js","DateTimePicker.js","Drug.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","db","Dexie","version","stores","persons","DrugSchedule","val","_this","this","hours","Array","from","keys","map","n","react_default","a","createElement","key","value","formatTo00","minutes","days","props","id","hour","minute","amount","unit","Component","DateTimePicker","Object","classCallCheck","console","log","undefined","year","day","month","valueDate","possibleConstructorReturn","getPrototypeOf","call","dateFromFormattedString","getHours","getFullYear","getMonth","getMinutes","getDate","state","isEdit","isEditable","currentMinutes","currentHours","currentDay","currentMonth","currentYear","doEdit","bind","assertThisInitialized","doCancel","doUpdate","doChangeHours","doChangeMinutes","doChangeDay","doChangeMonth","doChangeYear","resetCurrentValues","checkDayForValidity","stringForCurrentDate","setState","parsedYear","parsedMonth","parsedDay","parsedHour","parsedMinute","dateObject","formattedString","parsedDateNumber","Date","parse","parsedDate","Number","NaN","formatted","onChange","event","target","_this2","_this3","maxDays","daysInMonth","parseInt","iYear","iMonth","max","_this4","parsedDateString","stringFromDateObject","editControl","className","readControl","selectHours","selectMinutes","selectDay","months","selectMonth","yy","unshift","years","selectYear","title","onClick","Drug","name","timestamp","schedules","nextId","dummyDateString","handleChangeUnit","handleChangeName","handleChangeAmount","handleFormSubmit","addNewSchedule","handleDrugScheduleDelete","handleDrugScheduleUpdate","handleDatePickerChange","dateString","preventDefault","newSchedule","everyNdays","concat","alert","newHour","newMinute","newAmount","newEveryNDays","units","slice","onSubmit","type","e","src_DateTimePicker","src_DrugSchedule","App","colors","icons","newUserName","newUserColor","newUserIcon","doChangeNewUserName","doChangeNewUserColor","doChangeNewUserIcon","doAddNewUser","table","toArray","then","c","i","person","icon","color","add","inlineStyles","backgroundColor","style","selectColors","selectIcons","src","logo","alt","src_Drug","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8PCKlCC,EAAK,UAAIC,GAAM,oBACrBD,EAAGE,QAAQ,GAAGC,OAAO,CAAEC,QAAS,SAEjBJ,QCmDAK,qLAzCAC,GACP,OAAGA,EAAM,GACE,IAAMA,EAENA,mCAIP,IAAAC,EAAAC,KAEEC,EADKC,MAAMC,KAAKD,MAAM,IAAIE,QACfC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIP,EAAKa,WAAWN,MAEjEO,EADKX,MAAMC,KAAKD,MAAM,IAAIE,QACbC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIP,EAAKa,WAAWN,MAEnEQ,EADKZ,MAAMC,KAAKD,MAAM,IAAIE,QAChBC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAE,EAAGK,MAAOL,EAAE,GAAIA,EAAE,KAC5D,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gBACST,KAAKe,MAAMC,GADpB,UAGUhB,KAAKe,MAAME,KACjBV,EAAAC,EAAAC,cAAA,cAAUR,GAJd,YAMYD,KAAKe,MAAMG,OACnBX,EAAAC,EAAAC,cAAA,cAASI,GAPb,WASUN,EAAAC,EAAAC,cAAA,cAASK,GATnB,kBAWYd,KAAKe,MAAMI,OAXvB,MAaMnB,KAAKe,MAAMK,KAbjB,MAeIb,EAAAC,EAAAC,cAAA,wBAfJ,IAiBIF,EAAAC,EAAAC,cAAA,iCAjDOY,aC6RZC,cArRX,SAAAA,EAAYP,GAAM,IAAAhB,EAAAwB,OAAAC,EAAA,EAAAD,CAAAvB,KAAAsB,GACdG,QAAQC,IAAI,kCAEZ,IAAIzB,OAAQ0B,EACRC,OAAOD,EACPd,OAAUc,EACVE,OAAMF,EACNG,OAAQH,EACRI,GANJhC,EAAAwB,OAAAS,EAAA,EAAAT,CAAAvB,KAAAuB,OAAAU,EAAA,EAAAV,CAAAD,GAAAY,KAAAlC,KAAMe,KAMeoB,wBAAwBpB,EAAMJ,OARrC,OASG,OAAdoB,IACC9B,EAAQ8B,EAAUK,WAClBR,EAAOG,EAAUM,cACjBP,EAAQ,EAAIC,EAAUO,WACtBzB,EAAUkB,EAAUQ,aACpBV,EAAME,EAAUS,WAEpBzC,EAAK0C,MAAQ,CACTC,OAAQ3B,EAAM2B,OACdC,WAAY5B,EAAM4B,WAClBhC,MAAOI,EAAMJ,MACbiC,eAAgB/B,EAChBgC,aAAc5C,EACd6C,WAAYjB,EACZkB,aAAcjB,EACdkB,YAAapB,GAIjB7B,EAAKkD,OAASlD,EAAKkD,OAAOC,KAAZ3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACdA,EAAKqD,SAAWrD,EAAKqD,SAASF,KAAd3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAChBA,EAAKsD,SAAWtD,EAAKsD,SAASH,KAAd3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAChBA,EAAKuD,cAAgBvD,EAAKuD,cAAcJ,KAAnB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACrBA,EAAKwD,gBAAkBxD,EAAKwD,gBAAgBL,KAArB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACvBA,EAAKyD,YAAczD,EAAKyD,YAAYN,KAAjB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACnBA,EAAK0D,cAAgB1D,EAAK0D,cAAcP,KAAnB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACrBA,EAAK2D,aAAe3D,EAAK2D,aAAaR,KAAlB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACpBA,EAAK4D,mBAAqB5D,EAAK4D,mBAAmBT,KAAxB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC1BA,EAAK6D,oBAAsB7D,EAAK6D,oBAAoBV,KAAzB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC3BA,EAAK8D,qBAAuB9D,EAAK8D,qBAAqBX,KAA1B3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAtCdA,oFAkDd,IAAIE,OAAQ0B,EACRC,OAAOD,EACPd,OAAUc,EACVE,OAAMF,EACNG,OAAQH,EACRI,EAAY/B,KAAKmC,wBAAwBnC,KAAKyC,MAAM9B,OACvC,OAAdoB,IACC9B,EAAQ8B,EAAUK,WAClBR,EAAOG,EAAUM,cACjBP,EAAQ,EAAIC,EAAUO,WACtBzB,EAAUkB,EAAUQ,aACpBV,EAAME,EAAUS,WAEpBxC,KAAK8D,SACD,CACIlB,eAAgB/B,EAChBgC,aAAc5C,EACd6C,WAAYjB,EACZkB,aAAcjB,EACdkB,YAAapB,mDAMrB,IAAImC,EAAa/D,KAAKyC,MAAMO,YACxBgB,EAAchE,KAAKyC,MAAMM,aACzBkB,EAAYjE,KAAKyC,MAAMK,WACvBoB,EAAalE,KAAKyC,MAAMI,aACxBsB,EAAenE,KAAKyC,MAAMG,eAM9B,OALsBmB,EAChB,IAAM/D,KAAKY,WAAWoD,GACtB,IAAMhE,KAAKY,WAAWqD,GACtB,IAAMjE,KAAKY,WAAWsD,GACtB,IAAMlE,KAAKY,WAAWuD,gDAIXC,GACjB,IAAIL,EAAaK,EAAW/B,cACxB2B,EAAc,EAAII,EAAW9B,WAC7B2B,EAAYG,EAAW5B,UACvB0B,EAAaE,EAAWhC,WACxB+B,EAAeC,EAAW7B,aAM9B,OALsBwB,EAChB,KAAOC,EAAY,GAAG,IAAIA,EAAYA,GACtC,KAAOC,EAAU,GAAG,IAAIA,EAAUA,GAClC,KAAOC,EAAW,GAAG,IAAIA,EAAWA,GACpC,KAAOC,EAAa,GAAG,IAAIA,EAAaA,mDAI1BE,GACpB,IAAIC,EAAmBC,KAAKC,MAAMH,GAC9BI,EAAa,KAIjB,OAHGH,IAAqBI,OAAOC,MAC3BF,EAAa,IAAIF,KAAKD,IAEnBG,qCAGA3E,GACP,OAAGA,EAAM,GACE,IAAMA,EAENA,mCAKXE,KAAK8D,SAAS,CAACpB,QAAQ,uCAIvB1C,KAAK2D,qBACL3D,KAAK8D,SAAS,CAACpB,QAAQ,uCAIvB,IAAIkC,EAAY5E,KAAK6D,uBACrB7D,KAAKe,MAAM8D,SAASD,yCAGVE,GACV9E,KAAK8D,SAAS,CAACjB,aAAciC,EAAMC,OAAOpE,gDAG9BmE,GACZ9E,KAAK8D,SAAS,CAAClB,eAAgBkC,EAAMC,OAAOpE,6CAGnCmE,GAAM,IAAAE,EAAAhF,KACfA,KAAK8D,SACD,CAACd,YAAa8B,EAAMC,OAAOpE,OAC3B,kBAAMqE,EAAKpB,8DAILkB,GAAM,IAAAG,EAAAjF,KAChBA,KAAK8D,SACD,CAACf,aAAc+B,EAAMC,OAAOpE,OAC5B,kBAAMsE,EAAKrB,4DAIPkB,GACR9E,KAAK8D,SAAS,CAAChB,WAAYgC,EAAMC,OAAOpE,sDAIxC,IAAIuE,EAAU,QACevD,IAA1B3B,KAAKyC,MAAMK,aACVoC,EAAUlF,KAAKmF,YACXnF,KAAKyC,MAAMO,YACXhD,KAAKyC,MAAMM,aAAe,GAEnBqC,SAASpF,KAAKyC,MAAMK,YACrBoC,GACNlF,KAAK8D,SAAS,CAAChB,WAAYoC,yCAK3BG,EAAOC,GAEf,IAAIC,EAAM,GACNzD,EAAQsD,SAASE,GACrB,GAAa,IAAVxD,GACc,IAAVA,GACU,IAAVA,GACU,KAAVA,EACHyD,EAAM,QACJ,GAAa,IAAVzD,EAAY,CACjB,IAAIF,EAAOwD,SAASC,GAEhBE,GADD3D,EAAO,MAAQ,EAAIA,EAAO,MAAQ,EAAIA,EAAO,IAAM,GAC5C,GAEA,GAGd,OAAO2D,mCAGH,IAAAC,EAAAxF,KACJyB,QAAQC,IAAI,6BACZ,IAAI+C,EAAazE,KAAKmC,wBAAwBnC,KAAKyC,MAAM9B,OACrD8E,EAAmB,KACL,OAAfhB,IACCgB,EAAmBzF,KAAK0F,qBAAqBjB,IAEjD,IAAIkB,EAAepF,EAAAC,EAAAC,cAAA,QAAMmF,UAAU,gBAC/BC,EAAetF,EAAAC,EAAAC,cAAA,QAAMmF,UAAU,gBACnC,GAAG5F,KAAKyC,MAAMC,QAAU1C,KAAKyC,MAAME,WAAW,CAE1C,IACM1C,EADKC,MAAMC,KAAKD,MAAM,IAAIE,QACfC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIkF,EAAK5E,WAAWN,MACnEwF,EAAcvF,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAKsD,cAAe3C,MAAOX,KAAKyC,MAAMI,cACrE5C,GAGCY,EADOX,MAAMC,KAAKD,MAAM,IAAIE,QACbC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIkF,EAAK5E,WAAWN,MACvEyF,EAAgBxF,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAKuD,gBAAiB5C,MAAOX,KAAKyC,MAAMG,gBACzE/B,GAIDqE,EAAU,QACevD,IAA1B3B,KAAKyC,MAAMK,aACVoC,EAAUlF,KAAKmF,YACXnF,KAAKyC,MAAMO,YACXhD,KAAKyC,MAAMM,aAAe,IAGlC,IACMjC,EADKZ,MAAMC,KAAKD,MAAMgF,GAAS9E,QACrBC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,EAAE,GAAIkF,EAAK5E,WAAWN,EAAE,MACtE0F,EAAYzF,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAKwD,YAAa7C,MAAOX,KAAKyC,MAAMK,YACjEhC,GAGCmF,EADK/F,MAAMC,KAAKD,MAAM,IAAIE,QACdC,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,EAAE,GAAIkF,EAAK5E,WAAWN,EAAE,MACxE4F,EAAc3F,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAKyD,cAAe9C,MAAOX,KAAKyC,MAAMM,cACrEkD,GAEDE,EAAK,CAAC,KAAK,KAAK,WACUxE,IAA3B3B,KAAKyC,MAAMO,aAA6BhD,KAAKyC,MAAMO,YAAc,MAChEmD,EAAGC,QAAQpG,KAAKyC,MAAMO,aAE1B,IAAMqD,EAAQF,EAAG9F,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIkF,EAAK5E,WAAWN,MACnEgG,EAAa/F,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAK0D,aAAc/C,MAAOX,KAAKyC,MAAMO,aACnEqD,GAELV,EAAcpF,EAAAC,EAAAC,cAAA,YACdF,EAAAC,EAAAC,cAAA,SACKT,KAAKe,MAAMwF,MADhB,WAEWD,EAFX,UAGYJ,EAHZ,QAIUF,EAJV,UAKYF,EALZ,YAMcC,EACVxF,EAAAC,EAAAC,cAAA,UAAQ+F,QAASxG,KAAKqD,UAAtB,UACA9C,EAAAC,EAAAC,cAAA,UAAQ+F,QAASxG,KAAKoD,UAAtB,iBAKAyC,EADD7F,KAAKyC,MAAME,WACIpC,EAAAC,EAAAC,cAAA,YACdF,EAAAC,EAAAC,cAAA,SACCT,KAAKe,MAAMwF,MADZ,KACqBd,EAChBlF,EAAAC,EAAAC,cAAA,UAAQ+F,QAASxG,KAAKiD,QAAtB,UAIS1C,EAAAC,EAAAC,cAAA,YACdF,EAAAC,EAAAC,cAAA,SAAIT,KAAKe,MAAMwF,MAAf,KAAwBd,IAKhC,OACIlF,EAAAC,EAAAC,cAAA,WACKkF,EACAE,UAhRYxE,aC+HdoF,cApIX,SAAAA,EAAY1F,GAAM,IAAAhB,EAAA,OAAAwB,OAAAC,EAAA,EAAAD,CAAAvB,KAAAyG,GACdhF,QAAQC,IAAI,yBACZ3B,EAAAwB,OAAAS,EAAA,EAAAT,CAAAvB,KAAAuB,OAAAU,EAAA,EAAAV,CAAAkF,GAAAvE,KAAAlC,KAAMe,KACD0B,MAAQ,CACTiE,KAAM,GACNtF,KAAM,GACND,OAAQ,GACRwF,eAAWhF,EACXiF,UAAW,GACXC,OAAQ,EACRC,gBAAiB,oBAGrB/G,EAAKgH,iBAAmBhH,EAAKgH,iBAAiB7D,KAAtB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACxBA,EAAKiH,iBAAmBjH,EAAKiH,iBAAiB9D,KAAtB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACxBA,EAAKkH,mBAAqBlH,EAAKkH,mBAAmB/D,KAAxB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC1BA,EAAKmH,iBAAmBnH,EAAKmH,iBAAiBhE,KAAtB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAExBA,EAAKoH,eAAiBpH,EAAKoH,eAAejE,KAApB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACtBA,EAAKqH,yBAA2BrH,EAAKqH,yBAAyBlE,KAA9B3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAChCA,EAAKsH,yBAA2BtH,EAAKsH,yBAAyBnE,KAA9B3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAEhCA,EAAKuH,uBAAyBvH,EAAKuH,uBAAuBpE,KAA5B3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAtBhBA,sFAyBKwH,GACnB9F,QAAQC,IAAI,+BACZD,QAAQC,IAAI,eACZD,QAAQC,IAAI6F,GACZvH,KAAK8D,SACD,CAACgD,gBAAiBS,GAChB,WACE9F,QAAQC,IAAI,8DAKPoD,GACb9E,KAAK8D,SAAS,CAAC1C,KAAM0D,EAAMC,OAAOpE,iDAGrBmE,GACb9E,KAAK8D,SAAS,CAAC4C,KAAM5B,EAAMC,OAAOpE,mDAGnBmE,GACf9E,KAAK8D,SAAS,CAAC3C,OAAQ2D,EAAMC,OAAOpE,iDAGvBmE,GACbA,EAAM0C,0DAIN,IAAIX,EAAS7G,KAAKyC,MAAMoE,OAAS,EAC7BY,EAAc,CAACxG,KAAK,GAAIC,OAAO,GAAIC,OAAQ,EAAGuG,WAAY,EAAG1G,GAAI6F,GACrE7G,KAAK8D,SACD,CACI8C,UAAW5G,KAAKyC,MAAMmE,UAAUe,OAAOF,GACvCZ,OAAQA,qDAKK7F,GACrB4G,MAAM,UAAY5G,oDAGGA,EAAI6G,EAASC,EAAWC,EAAWC,GACxDJ,MAAM,QAAU5G,EAAK,IAAM6G,EAAU,IAAMC,EAAY,IAAMC,EAAY,IAAMC,oCAG3E,IAAAhD,EAAAhF,KACJyB,QAAQC,IAAI,mBACZ,IAAMuG,EAAQjI,KAAKe,MAAMkH,MAAMC,QACzBtB,EAAY5G,KAAKyC,MAAMmE,UAAUsB,QACvC,OACI3H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM0H,SAAUnI,KAAKkH,kBACjB3G,EAAAC,EAAAC,cAAA,iBAEIF,EAAAC,EAAAC,cAAA,SAAO2H,KAAK,OAAOzH,MAAOX,KAAKyC,MAAMiE,KAAM7B,SAAU7E,KAAKgH,oBAE9DzG,EAAAC,EAAAC,cAAA,mBAEIF,EAAAC,EAAAC,cAAA,SAAO2H,KAAK,SAASzH,MAAOX,KAAKyC,MAAMtB,OAAQ0D,SAAU7E,KAAKiH,qBAC9D1G,EAAAC,EAAAC,cAAA,UAAQE,MAAOX,KAAKyC,MAAMrB,KAAMyD,SAAU7E,KAAK+G,kBAC1CkB,EAAM5H,IAAI,SAACgI,EAAG3H,GACX,OAAOH,EAAAC,EAAAC,cAAA,UAAQC,IAAKA,EAAKC,MAAO0H,GAAIA,EAA7B,KAAkC3H,EAAlC,SAKnBH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,6BAAqBT,KAAKyC,MAAMqE,iBAChCvG,EAAAC,EAAAC,cAAC6H,EAAD,CACI/B,MAAM,QACN7D,QAAQ,EACRC,YAAY,EACZhC,MAAOX,KAAKyC,MAAMqE,gBAClBjC,SAAU7E,KAAKsH,uBAIf5G,IAAKV,KAAKyC,MAAMqE,kBAGpBvG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UAAQ+F,QAASxG,KAAKmH,gBAAtB,iBAECP,EAAUvG,IACN,SAACgI,EAAG3H,GACA,OAAOH,EAAAC,EAAAC,cAAC8H,EAAD,CACH7H,IAAK2H,EAAErH,GACPA,GAAIqH,EAAErH,GACNC,KAAMoH,EAAEpH,KACRC,OAAQmH,EAAEnH,OACVC,OAAQkH,EAAElH,OACVC,KAAM4D,EAAKvC,MAAMrB,kBA1HlCC,aC0HJmH,qBAvHb,SAAAA,EAAYzH,GAAM,IAAAhB,EAAA,OAAAwB,OAAAC,EAAA,EAAAD,CAAAvB,KAAAwI,GAChB/G,QAAQC,IAAI,wBACZ3B,EAAAwB,OAAAS,EAAA,EAAAT,CAAAvB,KAAAuB,OAAAU,EAAA,EAAAV,CAAAiH,GAAAtG,KAAAlC,KAAMe,KACD0B,MAAQ,CACTwF,MAAO,CAAC,UAAU,KAAK,MACvBQ,OAAQ,CAAC,OAAO,SAAS,SAAS,SAAS,QAAQ,aACnDC,MAAO,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,UAC5BC,iBAAahH,EACbiH,aAAc,OACdC,YAAa,UAIjB9I,EAAKiH,iBAAmBjH,EAAKiH,iBAAiB9D,KAAtB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KACxBA,EAAK+I,oBAAsB/I,EAAK+I,oBAAoB5F,KAAzB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC3BA,EAAKgJ,qBAAuBhJ,EAAKgJ,qBAAqB7F,KAA1B3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC5BA,EAAKiJ,oBAAsBjJ,EAAKiJ,oBAAoB9F,KAAzB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAC3BA,EAAKkJ,aAAelJ,EAAKkJ,aAAa/F,KAAlB3B,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAAxB,KAjBJA,mFAqBE,IAAAiF,EAAAhF,KAClBR,EAAG0J,MAAM,WACNC,UACAC,KAAK,SAACxJ,GACLoF,EAAKlB,SAAS,CAAElE,qDAKpB,IAAIU,EAAIN,KAAKyC,MAAMkG,YACfU,EAAIrJ,KAAKyC,MAAMmG,aACfU,EAAItJ,KAAKyC,MAAMoG,YACnBjB,MAAMtH,EAAI,IAAMgJ,EAAI,IAAMD,GAC1B,IAAME,EAAS,CACb7C,KAAMpG,EACNkJ,KAAMF,EACNG,MAAOJ,GAET7J,EAAG0J,MAAM,WACNQ,IAAIH,4CAOQzE,GACf9E,KAAK8D,SACH,CAAC6E,YAAa7D,EAAMC,OAAOpE,oDAIXmE,GAClB9E,KAAK8D,SACH,CAAC6E,YAAa7D,EAAMC,OAAOpE,oDAIXmE,GAClB9E,KAAK8D,SACH,CAAC+E,YAAa/D,EAAMC,OAAOpE,qDAIVmE,GACnB9E,KAAK8D,SACH,CAAC8E,aAAc9D,EAAMC,OAAOpE,yCAK9Bc,QAAQC,IAAI,kBACZ,IAAMuG,EAAQjI,KAAKyC,MAAMwF,MAAMC,QAEzBO,EADKzI,KAAKyC,MAAMgG,OAAOP,QACX7H,IACd,SAACC,GACC,IAAIqJ,EAAa,CAACC,gBAAiBtJ,GACnC,OAAQC,EAAAC,EAAAC,cAAA,UAAQoJ,MAAOF,EAAcjJ,IAAKJ,EAAGK,MAAOL,GAAIA,KAE1DwJ,EAAevJ,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAK+I,qBAAsBpI,MAAOX,KAAKyC,MAAMmG,cAC7EH,GAGCC,EADK1I,KAAKyC,MAAMiG,MAAMR,QACX7H,IAAI,SAACC,GAAD,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAGK,MAAOL,GAAIA,KACnDyJ,EAAcxJ,EAAAC,EAAAC,cAAA,UAAQoE,SAAU7E,KAAKgJ,oBAAqBrI,MAAOX,KAAKyC,MAAMoG,aAC3EH,GAEL,OACEnI,EAAAC,EAAAC,cAAA,OAAKmF,UAAU,OACbrF,EAAAC,EAAAC,cAAA,UAAQmF,UAAU,cAChBrF,EAAAC,EAAAC,cAAA,OAAKmF,UAAU,kBACbrF,EAAAC,EAAAC,cAAA,OAAKmF,UAAU,uBAAsBrF,EAAAC,EAAAC,cAAA,OAAKuJ,IAAKC,IAAMrE,UAAU,WAAWsE,IAAI,UAC9E3J,EAAAC,EAAAC,cAAA,OAAKmF,UAAU,wBAAuBrF,EAAAC,EAAAC,cAAA,uBAG1CF,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,gKACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACaF,EAAAC,EAAAC,cAAA,SAAO2H,KAAK,OAAOzH,MAAOX,KAAKyC,MAAMkG,YAAa9D,SAAU7E,KAAK8I,sBAD9E,SAEWgB,EAFX,QAGUC,EACNxJ,EAAAC,EAAAC,cAAA,UAAQ+F,QAASxG,KAAKiJ,cAAtB,SAGN1I,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mDACHF,EAAAC,EAAAC,cAAC0J,EAAD,CAAMlC,MAAOA,aAhHP5G,cCME+I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnK,EAAAC,EAAAC,cAACkK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.311e73d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c695c8b2.svg\";","import Dexie from 'dexie';\r\n\r\n// for examples of using Dexie with React.js:\r\n// q.v. https://github.com/dfahlander/Dexie.js/blob/master/samples/react/src/db.js\r\n\r\nconst db = new Dexie('MoloroshPharmaDB');\r\ndb.version(1).stores({ persons: '++id' });\r\n\r\nexport default db;","import React, { Component } from 'react';\r\n//import { parentPort } from 'worker_threads';\r\n\r\nclass DrugSchedule extends Component {\r\n    /*\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: props.id,\r\n            hour: props.hour,\r\n            minute: props.minute,\r\n            amount: props.amount,\r\n            everyNdays: props.everyNdays,\r\n            isChanged: false,\r\n        };\r\n    }\r\n    */\r\n\r\n    formatTo00(val){\r\n        if(val < 10){\r\n            return \"0\" + val;\r\n        }else{\r\n            return val;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const hh = Array.from(Array(24).keys());\r\n        const hours = hh.map((n) => <option key={n} value={n}>{this.formatTo00(n)}</option>);\r\n        const mm = Array.from(Array(60).keys());\r\n        const minutes = mm.map((n) => <option key={n} value={n}>{this.formatTo00(n)}</option>);\r\n        const dd = Array.from(Array(14).keys());\r\n        const days = dd.map((n) => <option key={n+1} value={n+1}>{n+1}</option>);\r\n        return (\r\n            <div>\r\n                <p>\r\n                    key:{this.props.id} \r\n                    |\r\n                    Hour:{this.props.hour} \r\n                    <select >{hours}</select>\r\n                    |\r\n                    Minute:{this.props.minute} \r\n                    <select>{minutes}</select>\r\n                    | \r\n                    Every <select>{days}</select> Days\r\n                    | \r\n                    Amount:{this.props.amount} \r\n                    | \r\n                    ({this.props.unit}) \r\n                    |\r\n                    <button>Update</button>\r\n                    |\r\n                    <button>Delete</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrugSchedule;","import React, { Component } from 'react';\r\n\r\n// note: the guidance on component updating has changed\r\n// see https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops\r\n\r\n// so componentWillReceiveProps(nextProps) {...} is considerd UNSAFE \r\n// and will be removed in React.js v 17\r\n\r\n// \r\n\r\nclass DateTimePicker extends Component {\r\n    constructor(props){\r\n        console.log(\"constructor(DateTimePicker.js)\");\r\n        super(props);\r\n        let hours = undefined;\r\n        let year = undefined;\r\n        let minutes = undefined;\r\n        let day = undefined;\r\n        let month = undefined;\r\n        let valueDate = this.dateFromFormattedString(props.value);\r\n        if(valueDate !== null){\r\n            hours = valueDate.getHours();\r\n            year = valueDate.getFullYear();\r\n            month = 1 + valueDate.getMonth();\r\n            minutes = valueDate.getMinutes();\r\n            day = valueDate.getDate();\r\n        }\r\n        this.state = {\r\n            isEdit: props.isEdit,\r\n            isEditable: props.isEditable,\r\n            value: props.value,\r\n            currentMinutes: minutes,\r\n            currentHours: hours,\r\n            currentDay: day,\r\n            currentMonth: month,\r\n            currentYear: year\r\n        };\r\n        // must bind functions that require 'this.' e.g. \r\n        // this.setState({isEdit: false}});\r\n        this.doEdit = this.doEdit.bind(this);\r\n        this.doCancel = this.doCancel.bind(this);\r\n        this.doUpdate = this.doUpdate.bind(this);\r\n        this.doChangeHours = this.doChangeHours.bind(this);\r\n        this.doChangeMinutes = this.doChangeMinutes.bind(this);\r\n        this.doChangeDay = this.doChangeDay.bind(this);\r\n        this.doChangeMonth = this.doChangeMonth.bind(this);\r\n        this.doChangeYear = this.doChangeYear.bind(this);\r\n        this.resetCurrentValues = this.resetCurrentValues.bind(this);\r\n        this.checkDayForValidity = this.checkDayForValidity.bind(this);\r\n        this.stringForCurrentDate = this.stringForCurrentDate.bind(this);\r\n    }\r\n\r\n    /*\r\n    // this will make the child component listen for changes to its props\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ value: nextProps.value });  \r\n    }\r\n    but we are deprecating this \r\n    */\r\n\r\n    resetCurrentValues(){\r\n        let hours = undefined;\r\n        let year = undefined;\r\n        let minutes = undefined;\r\n        let day = undefined;\r\n        let month = undefined;\r\n        let valueDate = this.dateFromFormattedString(this.state.value);\r\n        if(valueDate !== null){\r\n            hours = valueDate.getHours();\r\n            year = valueDate.getFullYear();\r\n            month = 1 + valueDate.getMonth();\r\n            minutes = valueDate.getMinutes();\r\n            day = valueDate.getDate();\r\n        }\r\n        this.setState(\r\n            {\r\n                currentMinutes: minutes,\r\n                currentHours: hours,\r\n                currentDay: day,\r\n                currentMonth: month,\r\n                currentYear: year\r\n            }\r\n        );\r\n    }\r\n\r\n    stringForCurrentDate(){\r\n        let parsedYear = this.state.currentYear;\r\n        let parsedMonth = this.state.currentMonth;\r\n        let parsedDay = this.state.currentDay;\r\n        let parsedHour = this.state.currentHours;\r\n        let parsedMinute = this.state.currentMinutes;\r\n        let formattedString = parsedYear\r\n            + \"-\" + this.formatTo00(parsedMonth)\r\n            + \"-\" + this.formatTo00(parsedDay)\r\n            + \"T\" + this.formatTo00(parsedHour)\r\n            + \":\" + this.formatTo00(parsedMinute);\r\n        return formattedString; \r\n    }\r\n\r\n    stringFromDateObject(dateObject){\r\n        let parsedYear = dateObject.getFullYear();\r\n        let parsedMonth = 1 + dateObject.getMonth();\r\n        let parsedDay = dateObject.getDate();\r\n        let parsedHour = dateObject.getHours();\r\n        let parsedMinute = dateObject.getMinutes();\r\n        let formattedString = parsedYear\r\n            + \"-\" + (parsedMonth<10?\"0\"+parsedMonth:parsedMonth)\r\n            + \"-\" + (parsedDay<10?\"0\"+parsedDay:parsedDay)\r\n            + \"T\" + (parsedHour<10?\"0\"+parsedHour:parsedHour)\r\n            + \":\" + (parsedMinute<10?\"0\"+parsedMinute:parsedMinute);\r\n        return formattedString;\r\n    }\r\n\r\n    dateFromFormattedString(formattedString){\r\n        let parsedDateNumber = Date.parse(formattedString);\r\n        let parsedDate = null;\r\n        if(parsedDateNumber !== Number.NaN){\r\n            parsedDate = new Date(parsedDateNumber);\r\n        }\r\n        return parsedDate;\r\n    }\r\n\r\n    formatTo00(val){\r\n        if(val < 10){\r\n            return \"0\" + val;\r\n        }else{\r\n            return val;\r\n        }\r\n    }\r\n\r\n    doEdit(){\r\n        this.setState({isEdit: true});\r\n    }\r\n\r\n    doCancel(){\r\n        this.resetCurrentValues();\r\n        this.setState({isEdit: false});\r\n    }\r\n\r\n    doUpdate(){\r\n        let formatted = this.stringForCurrentDate();\r\n        this.props.onChange(formatted);\r\n    }\r\n\r\n    doChangeHours(event){\r\n        this.setState({currentHours: event.target.value});\r\n    }\r\n    \r\n    doChangeMinutes(event){\r\n        this.setState({currentMinutes: event.target.value});\r\n    }\r\n\r\n    doChangeYear(event){\r\n        this.setState(\r\n            {currentYear: event.target.value},\r\n            () => this.checkDayForValidity() \r\n            );\r\n    }\r\n\r\n    doChangeMonth(event){\r\n        this.setState(\r\n            {currentMonth: event.target.value},\r\n            () => this.checkDayForValidity()\r\n            );\r\n    }\r\n\r\n    doChangeDay(event){\r\n        this.setState({currentDay: event.target.value});\r\n    }\r\n\r\n    checkDayForValidity(){\r\n        let maxDays = 31;\r\n        if(this.state.currentDay !== undefined){\r\n            maxDays = this.daysInMonth(\r\n                this.state.currentYear,\r\n                this.state.currentMonth - 1\r\n                );\r\n            let days = parseInt(this.state.currentDay);\r\n            if(days > maxDays){\r\n                this.setState({currentDay: maxDays});\r\n            }\r\n        }\r\n    }\r\n\r\n    daysInMonth(iYear, iMonth)\r\n    {\r\n        let max = 31;\r\n        let month = parseInt(iMonth);\r\n        if(month === 8 /* September */\r\n            || month === 4 /* April */\r\n            || month === 6 /* June */\r\n            || month === 10 /* November */){\r\n            max = 30;\r\n        }else if(month === 1){\r\n            let year = parseInt(iYear);\r\n            if(year % 100 === 0 ? year % 400 === 0 : year % 4 === 0){\r\n                max = 29;\r\n            }else{\r\n                max = 28;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    render(){\r\n        console.log(\"Render(DateTimePicker.js)\");\r\n        let parsedDate = this.dateFromFormattedString(this.state.value);\r\n        let parsedDateString = null;\r\n        if(parsedDate !== null){\r\n            parsedDateString = this.stringFromDateObject(parsedDate);\r\n        }\r\n        let editControl = (<span className=\"editControl\"></span>);\r\n        let readControl = (<span className=\"readControl\"></span>);\r\n        if(this.state.isEdit && this.state.isEditable){\r\n            // just implement the editable hours for now...\r\n            const hh = Array.from(Array(24).keys());\r\n            const hours = hh.map((n) => <option key={n} value={n}>{this.formatTo00(n)}</option>);\r\n            let selectHours = <select onChange={this.doChangeHours} value={this.state.currentHours}>\r\n                {hours}\r\n            </select>\r\n            const mmmm = Array.from(Array(60).keys());\r\n            const minutes = mmmm.map((n) => <option key={n} value={n}>{this.formatTo00(n)}</option>);\r\n            let selectMinutes = <select onChange={this.doChangeMinutes} value={this.state.currentMinutes}>\r\n                {minutes}\r\n            </select>\r\n            // we need to ensure the number of days is valid for the \r\n            // year and month\r\n            let maxDays = 31;\r\n            if(this.state.currentDay !== undefined){\r\n                maxDays = this.daysInMonth(\r\n                    this.state.currentYear,\r\n                    this.state.currentMonth - 1\r\n                    );\r\n            }\r\n            const dd = Array.from(Array(maxDays).keys());\r\n            const days = dd.map((n) => <option key={n} value={n+1}>{this.formatTo00(n+1)}</option>);\r\n            let selectDay = <select onChange={this.doChangeDay} value={this.state.currentDay}>\r\n                {days}\r\n            </select>\r\n            const mm = Array.from(Array(12).keys());\r\n            const months = mm.map((n) => <option key={n} value={n+1}>{this.formatTo00(n+1)}</option>);\r\n            let selectMonth = <select onChange={this.doChangeMonth} value={this.state.currentMonth}>\r\n                {months}\r\n            </select>\r\n            let yy = [2018,2019,2020];\r\n            if(this.state.currentYear !== undefined && this.state.currentYear < 2018){\r\n                yy.unshift(this.state.currentYear);\r\n            }\r\n            const years = yy.map((n) => <option key={n} value={n}>{this.formatTo00(n)}</option>);\r\n            let selectYear = <select onChange={this.doChangeYear} value={this.state.currentYear}>\r\n                {years}\r\n            </select>\r\n            editControl = <span>\r\n            <p>\r\n                {this.props.title}:     \r\n                Year: {selectYear}\r\n                Month: {selectMonth}\r\n                Day: {selectDay}\r\n                Hours: {selectHours}\r\n                Minutes: {selectMinutes}\r\n                <button onClick={this.doUpdate}>Update</button>\r\n                <button onClick={this.doCancel}>Cancel</button>\r\n            </p>\r\n            </span>\r\n        }else{\r\n            if(this.state.isEditable){\r\n                readControl = <span>\r\n                <p>\r\n                {this.props.title}: {parsedDateString}\r\n                     <button onClick={this.doEdit}>Edit</button>\r\n                </p>\r\n            </span>    \r\n            }else{\r\n                readControl = <span>\r\n                <p>{this.props.title}: {parsedDateString}</p>\r\n            </span>\r\n            }\r\n            \r\n        }\r\n        return(\r\n            <div>\r\n                {editControl}\r\n                {readControl}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateTimePicker;","import React, { Component } from 'react';\r\nimport DrugSchedule from './DrugSchedule';\r\nimport DateTimePicker from './DateTimePicker';\r\n\r\nclass Drug extends Component {\r\n    constructor(props){\r\n        console.log(\"constructor(Drug.js)\");\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            unit: \"\",\r\n            amount: 28,\r\n            timestamp: undefined, \r\n            schedules: [],  \r\n            nextId: 1,\r\n            dummyDateString: \"2008-08-28T23:30\"\r\n        }\r\n        // drug events\r\n        this.handleChangeUnit = this.handleChangeUnit.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.handleChangeAmount = this.handleChangeAmount.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        // schedule events\r\n        this.addNewSchedule = this.addNewSchedule.bind(this);\r\n        this.handleDrugScheduleDelete = this.handleDrugScheduleDelete.bind(this);\r\n        this.handleDrugScheduleUpdate = this.handleDrugScheduleUpdate.bind(this);\r\n        // DatePicker events\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n    }\r\n\r\n    handleDatePickerChange(dateString){\r\n        console.log(\"handleDatePickerChange(...)\");\r\n        console.log(\"dateString:\");\r\n        console.log(dateString);\r\n        this.setState(\r\n            {dummyDateString: dateString}\r\n            , ()=> {\r\n                console.log(\"finished update\");\r\n            }\r\n        );\r\n    }\r\n\r\n    handleChangeUnit(event){\r\n        this.setState({unit: event.target.value});\r\n    }\r\n\r\n    handleChangeName(event){\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    handleChangeAmount(event){\r\n        this.setState({amount: event.target.value});\r\n    }\r\n\r\n    handleFormSubmit(event){\r\n        event.preventDefault();\r\n    }\r\n\r\n    addNewSchedule(){\r\n        let nextId = this.state.nextId + 1;\r\n        let newSchedule = {hour:12, minute:20, amount: 3, everyNdays: 3, id: nextId};\r\n        this.setState(\r\n            { \r\n                schedules: this.state.schedules.concat(newSchedule),\r\n                nextId: nextId,\r\n            }\r\n        );\r\n    }\r\n\r\n    handleDrugScheduleDelete(id){\r\n        alert(\"delete \" + id);\r\n    }\r\n\r\n    handleDrugScheduleUpdate(id, newHour, newMinute, newAmount, newEveryNDays){\r\n        alert(\"upd8 \" + id + \" \" + newHour + \" \" + newMinute + \" \" + newAmount + \" \" + newEveryNDays);\r\n    }\r\n\r\n    render(){\r\n        console.log(\"Render(Drug.js)\");\r\n        const units = this.props.units.slice();\r\n        const schedules = this.state.schedules.slice();\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <p>\r\n                        name: \r\n                        <input type=\"text\" value={this.state.name} onChange={this.handleChangeName} />\r\n                    </p>\r\n                    <p>\r\n                        amount: \r\n                        <input type=\"number\" value={this.state.amount} onChange={this.handleChangeAmount} />\r\n                        <select value={this.state.unit} onChange={this.handleChangeUnit}>\r\n                            {units.map((e, key) => {\r\n                                return <option key={key} value={e}>{e} ({key})</option>;\r\n                            })}\r\n                        </select>\r\n                    </p>\r\n                    \r\n                    <hr></hr>\r\n                    <h4>DateTimePicker</h4>\r\n                    <p>This is a small date time picker componnent:</p>\r\n                    <p>dummyDateString: {this.state.dummyDateString}</p>\r\n                    <DateTimePicker \r\n                        title=\"as at\"\r\n                        isEdit={false}\r\n                        isEditable={true}\r\n                        value={this.state.dummyDateString}\r\n                        onChange={this.handleDatePickerChange}\r\n                        // updating with a key is a great and simple\r\n                        // way to ensure the child component is redrawn\r\n                        // from scratch if the principal data is changed\r\n                        key={this.state.dummyDateString}\r\n                        >\r\n                    </DateTimePicker>\r\n                    <hr></hr>\r\n                    <h2>Schedules</h2>\r\n                    <p><button onClick={this.addNewSchedule}>Add Schedule</button></p>\r\n                    {\r\n                        schedules.map(\r\n                            (e, key) => {\r\n                                return <DrugSchedule \r\n                                    key={e.id} \r\n                                    id={e.id} \r\n                                    hour={e.hour} \r\n                                    minute={e.minute} \r\n                                    amount={e.amount} \r\n                                    unit={this.state.unit} \r\n                                ></DrugSchedule>;\r\n                            }\r\n                        )\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Drug;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport db from './db';\nimport Drug from './Drug';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    console.log(\"constructor(App.js)\");\n    super(props);\n    this.state = {\n        units: [\"pill(s)\",\"mg\",\"ml\"],\n        colors: [\"Pink\",\"Orchid\",\"Salmon\",\"Orange\",\"Khaki\",\"Gainsboro\"],\n        icons: [\"۝\",\"۞\",\"⊜\",\"⊞\",\"⊙\",\"⊗\"],\n        newUserName: undefined,\n        newUserColor: \"Pink\",\n        newUserIcon: \"۝\"\n    }\n    // must bind functions that require 'this.' e.g. \n    // this.setState({isEdit: false}});\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.doChangeNewUserName = this.doChangeNewUserName.bind(this);\n    this.doChangeNewUserColor = this.doChangeNewUserColor.bind(this);\n    this.doChangeNewUserIcon = this.doChangeNewUserIcon.bind(this);\n    this.doAddNewUser = this.doAddNewUser.bind(this);\n  }\n\n  // this is called before the \"render() method\n  componentDidMount() {\n    db.table('persons')\n      .toArray()\n      .then((persons) => {\n        this.setState({ persons });\n      });\n  }\n\n  doAddNewUser(){\n    let n = this.state.newUserName;\n    let c = this.state.newUserColor;\n    let i = this.state.newUserIcon;\n    alert(n + \" \" + i + \" \" + c);\n    const person = {\n      name: n,\n      icon: i,\n      color: c\n    };\n    db.table('persons')\n      .add(person);\n      //.then((id) => {\n      //  const newList = [...this.persons.todos, Object.assign({}, todo, { id })];\n      //  this.setState({ todos: newList });\n      //});\n  }\n\n  handleChangeName(event){\n    this.setState(\n      {newUserName: event.target.value}\n    );\n  }\n\n  doChangeNewUserName(event){\n    this.setState(\n      {newUserName: event.target.value}\n    );\n  }\n\n  doChangeNewUserIcon(event){\n    this.setState(\n      {newUserIcon: event.target.value}\n    );\n  }\n  \n  doChangeNewUserColor(event){\n    this.setState(\n      {newUserColor: event.target.value}\n    );\n  }\n\n  render() {\n    console.log(\"Render(App.js)\");\n    const units = this.state.units.slice();\n    const cc = this.state.colors.slice();\n    const colors = cc.map(\n        (n) => {\n          let inlineStyles={backgroundColor: n};\n          return (<option style={inlineStyles} key={n} value={n}>{n}</option>);\n        });\n    let selectColors = <select onChange={this.doChangeNewUserColor} value={this.state.newUserColor}>\n        {colors}\n    </select>\n    const ii = this.state.icons.slice();\n    const icons = ii.map((n) => <option key={n} value={n}>{n}</option>);\n    let selectIcons = <select onChange={this.doChangeNewUserIcon} value={this.state.newUserIcon}>\n        {icons}\n    </select>\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-header-div\">\n            <div className=\"App-header-div-logo\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></div>\n            <div className=\"App-header-div-title\"><h1>Pharma</h1></div>\n          </div>\n        </header>\n        <section>\n            <h2>Disclaimer</h2>\n            <p>This is currently an un-finished app.  It should not be considered stable.  It's where I am learning about building apps and components in React.js</p>\n            <h2>App UX</h2>\n            <h3>Persons</h3>\n            <div>\n              <p>\n                  nickname:<input type=\"text\" value={this.state.newUserName} onChange={this.doChangeNewUserName} />\n                  color:{selectColors}\n                  icon:{selectIcons}\n                  <button onClick={this.doAddNewUser}>Add</button>\n              </p>\n            </div>\n            <h3>Drug</h3>\n            <p><code>This is a simple drug component...</code></p>\n            <Drug units={units}></Drug>\n          </section>  \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}